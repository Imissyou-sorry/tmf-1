<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
    <!-- 引入配置文件 -->
    <properties resource="jdbc.properties"/>

    <!-- 指定数据连接驱动jar地址 -->
    <!--<classPathEntry location="${classPath}" />-->

    <!--资源数据-->
    <context id="re">

        <property name="javaFileEncoding" value="UTF-8"/>

        <plugin type="org.mybatis.generator.plugins.RowBoundsPlugin"/>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin"/>

        <!-- 注释 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
            <!-- 是否取消注释 -->
            <property name="suppressDate" value="true"/>
            <!-- 是否生成注释代时间戳-->
        </commentGenerator>

        <!-- jdbc连接 -->
        <jdbcConnection driverClass="${jdbc.driver}"
                        connectionURL="${jdbc.url}" userId="${jdbc.username}"
                        password="${jdbc.password}"/>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
            <!-- 类型解析器 -->
        </javaTypeResolver>


        <!-- 生成实体类地址 -->
        <javaModelGenerator targetPackage="${domainPackage}.re"
                            targetProject="${domainProject}">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否针对string类型的字段在set的时候进行trim调用 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 生成mapxml文件 -->
        <sqlMapGenerator targetPackage="${mapxmlPackage}.re"
                         targetProject="${mapxmlProject}">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 生成mapxml对应client，也就是接口dao -->
        <javaClientGenerator targetPackage="${daoPackage}.re"
                             targetProject="${daoProject}" type="XMLMAPPER">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- 配置表信息 -->
        <table tableName="%">
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
                      是否生成 example类   -->

            <!-- 忽略列，不生成bean 字段 -->
            <!--<ignoreColumn column="FRED" />-->
            <!-- 指定列的java数据类型 -->
            <!--<columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />-->

            <!--<generatedKey column="ID" sqlStatement="SELECT SEQ_BA_MENU.NEXTVAL FROM dual"/>-->
        </table>

    </context>

    <!--&lt;!&ndash;权限&ndash;&gt;
    <context id="user">

        <property name="javaFileEncoding" value="UTF-8"/>

        <plugin type="org.mybatis.generator.plugins.RowBoundsPlugin"/>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin"/>

        &lt;!&ndash; 注释 &ndash;&gt;
        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
            &lt;!&ndash; 是否取消注释 &ndash;&gt;
            <property name="suppressDate" value="true"/>
            &lt;!&ndash; 是否生成注释代时间戳&ndash;&gt;
        </commentGenerator>

        &lt;!&ndash; jdbc连接 &ndash;&gt;
        <jdbcConnection driverClass="${jdbc.driver}"
                        connectionURL="${jdbc.url}" userId="${jdbc.username}"
                        password="${jdbc.password}"/>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
            &lt;!&ndash; 类型解析器 &ndash;&gt;
        </javaTypeResolver>


        &lt;!&ndash; 生成实体类地址 &ndash;&gt;
        <javaModelGenerator targetPackage="${domainPackage}.user"
                            targetProject="${domainProject}">
            &lt;!&ndash; 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] &ndash;&gt;
            <property name="enableSubPackages" value="false"/>
            &lt;!&ndash; 是否针对string类型的字段在set的时候进行trim调用 &ndash;&gt;
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        &lt;!&ndash; 生成mapxml文件 &ndash;&gt;
        <sqlMapGenerator targetPackage="${mapxmlPackage}.user"
                         targetProject="${mapxmlProject}">
            &lt;!&ndash; 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] &ndash;&gt;
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        &lt;!&ndash; 生成mapxml对应client，也就是接口dao &ndash;&gt;
        <javaClientGenerator targetPackage="${daoPackage}.user"
                             targetProject="${daoProject}" type="XMLMAPPER">
            &lt;!&ndash; 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] &ndash;&gt;
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        &lt;!&ndash; 配置表信息 &ndash;&gt;
        <table tableName="user%">
            &lt;!&ndash; schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
                      是否生成 example类   &ndash;&gt;

            &lt;!&ndash; 忽略列，不生成bean 字段 &ndash;&gt;
            &lt;!&ndash;<ignoreColumn column="FRED" />&ndash;&gt;
            &lt;!&ndash; 指定列的java数据类型 &ndash;&gt;
            &lt;!&ndash;<columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />&ndash;&gt;

            &lt;!&ndash;<generatedKey column="ID" sqlStatement="SELECT SEQ_BA_MENU.NEXTVAL FROM dual"/>&ndash;&gt;
        </table>

    </context>
-->
</generatorConfiguration>